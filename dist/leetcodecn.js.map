{"version":3,"file":"leetcodecn.js","mappings":";;;;;;;;;;;;;;;;AAAiD;AACG;;;AAGpD;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT,KAAK;AACL,8DAA8D,IAAI;AAClE,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA,kCAAkC,YAAY;AAC9C;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAiB,6DAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,IAAI,GAAG,WAAW;AAChD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,gBAAgB;AACpC,8BAA8B,IAAI,GAAG,EAAE;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,KAAK;AAC5B;AACA;AACA;;AAEA,mCAAmC,6DAAe;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,oBAAoB;;;;;;;;;;;;;;;ACnHnC;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,OAAO;AACP,yBAAyB,QAAQ,YAAY,KAAK;;AAElD;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,QAAQ;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACO;AACP;;AAEA;AACA,mCAAmC,SAAS;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,wBAAwB,4BAA4B,IAAI,0DAA0D;AAClH;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClEoD;;AAE7C;AACP;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;AACT,KAAK;AACL,+DAA+D,IAAI;AACnE,KAAK;AACL;;AAEO;AACP;AACA,mCAAmC,YAAY;AAC/C;AACA,KAAK;AACL;;AAEA,mCAAmC,6DAAe;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,oBAAoB;;;;;;;;;;;;;;AChC5B;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACLO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;ACbM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3DuD;AACW;;AAElE;;AAEA,MAAM,mEAAW;AACjB;;;AAGA,8CAA8C,wDAAe;;AAE7D;AACA;AACA;AACA;AACA,QAAQ,4DAAe;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC9CiK;AAC/B;AACvF;AACS;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,gEAAmB;;AAE9C;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,gEAAmB;;AAE3C;;AAEA,gBAAgB,sDAAsD,QAAQ,0FAAiC;AAC/G,cAAc,qEAAY,MAAM;AAChC,+BAA+B,uEAAc;AAC7C;AACA;AACA;AACA,iCAAiC,uDAAU;AAC3C;AACA,sBAAsB,8EAAqB,CAAC,+EAAkC;AAC9E;AACA,UAAU;AACV,0BAA0B,oDAAO,kEAAkE,oEAAuB;AAC1H,kBAAkB,8EAAqB;AACvC;AACA,cAAc,qEAAY,IAAI;;AAE9B;;AAEA,KAAK;AACL;;AAEO;;AAEP;AACA;AACA;AACA,QAAQ,2DAAc;AACtB,iCAAiC,2DAAc;AAC/C,wEAAwE,2DAAc;AACtF;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;AAIO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;;AAGA;AACO;AACP;AACA;AACA;AACA,iCAAiC;AACjC,0BAA0B;AAC1B,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,qEAAY,MAAM;AACpC,oBAAoB,sDAAsD,QAAQ,0FAAiC;AACnH,mCAAmC,uEAAc;AACjD;AACA;AACA;AACA,0BAA0B,iEAAqB;AAC/C,sBAAsB,8EAAqB,CAAC,+EAAkC;AAC9E,cAAc;AACd,8BAA8B,oDAAO,kEAAkE,oEAAuB;AAC9H,0BAA0B,iEAAqB;AAC/C,sBAAsB,8EAAqB;AAC3C;AACA,UAAU;AACV;AACA,sBAAsB,iEAAqB;AAC3C,kBAAkB,8EAAqB;AACvC;;AAEA,cAAc,qEAAY,IAAI;AAC9B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,0BAA0B,SAAS;AACnC;AACA,aAAa;AACb,SAAS;;AAET;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;AAC/C,+CAA+C;;AAE/C,qDAAqD;AACrD,qDAAqD;AACrD,qDAAqD;AACrD,qDAAqD;AACrD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClU2F;AAC1D;AAC8H;AAC5F;;AAEnE;;AAEO;AACP,iBAAiB,mFAAmB,CAAC,uDAAe;AACpD;;AAEO;AACP;AACA,WAAW,gCAAgC,EAAE,yCAAK;AAClD;AACA;AACA;AACA,UAAU,mFAAmB,CAAC,uDAAe;AAC7C;;AAEO;AACP;AACA;AACA,sBAAsB,yCAAK;AAC3B;AACA;;;AAGA;AACO;AACP,iBAAiB,mFAAmB,CAAC,2DAAmB;AACxD;;AAEO;AACP,UAAU,mFAAmB,CAAC,2DAAmB;AACjD;;AAEO;AACP,gDAAgD,gDAAI,CAAC,sDAAc;AACnE,IAAI,yCAAK,iBAAiB,yDAAa;AACvC;;;;AAIA;AACO;AACP,0BAA0B,mFAAmB,CAAC,kDAAU;AACxD,sDAAsD,qEAA6B;AACnF;AACA;AACA;AACA;AACA;;AAEO;AACP,0BAA0B,mFAAmB,CAAC,kDAAU;AACxD,8BAA8B,qEAA6B;AAC3D;AACA;AACA;AACA,YAAY,qEAA6B;AACzC,UAAU,mFAAmB,CAAC,kDAAU;AACxC;;AAEO;AACP,0BAA0B,mFAAmB,CAAC,kDAAU;AACxD;AACA;AACA,YAAY,qEAA6B;AACzC,UAAU,mFAAmB,CAAC,kDAAU;AACxC;;;AAGO;AACP,IAAI,yCAAK;AACT;;AAEA;AACO;AACP,wBAAwB,mFAAmB,CAAC,8DAAsB;AAClE,yCAAyC,gEAAwB;AACjE;;AAEA;AACO;AACP;AACA,UAAU,mFAAmB,CAAC,8DAAsB;AACpD;;AAEA;AACO;AACP,IAAI,yCAAK;AACT;;;AAGO;AACP;AACA;AACA;AACA,mCAAmC;AACnC;;;;;;;;;;;;;;;;;ACpG2F;AACrD;;AAE/B;AACP,uBAAuB,mFAAmB,CAAC,+CAAO;AAClD,qCAAqC,OAAO;AAC5C;AACA,cAAc,mFAAmB,CAAC,+CAAO;AACzC;AACA;AACA;AACA;;AAEO;AACP;AACA,kDAAkD;AAClD,UAAU,mFAAmB,CAAC,+CAAO;AACrC;AACA;;;;;;;;;;;;;;;;;;;;;;;AClB6D;AAClB;AACI;AAC6C;AACpB;AAC/B;;AAEzC;;AAEO;AACP,qBAAqB,qDAAI;AACzB;AACA,oCAAoC,sEAAgB,iBAAiB,wDAAU;AAC/E,2BAA2B,mFAAmB,CAAC,uDAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,mFAAmB,CAAC,uDAAe;AAC7C;;AAEO;AACP,6BAA6B,mFAAmB,CAAC,uDAAe;AAChE;AACA;AACA;;AAEA;AACA,UAAU,mFAAmB,CAAC,uDAAe;AAC7C;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,oDAAoD;;AAEpD,2BAA2B,kEAAiB;AAC5C;AACA,UAAU,kEAAiB;AAC3B;;AAEO;AACP,6BAA6B,mFAAmB,CAAC,uDAAe;AAChE;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnD8D;AAC8B;AACzB;AACb;AACD;AACM;AAChB;AACV;AACuC;AACJ;AACR;;AAErD;AACP,uBAAuB,wDAAU;AACjC,8BAA8B,sDAAc,GAAG,mDAAW;AAC1D,yBAAyB,mFAAmB;AAC5C;AACA;AACA;;AAEO;AACP,uBAAuB,wDAAU;AACjC,8BAA8B,sDAAc,GAAG,mDAAW;AAC1D,yBAAyB,sEAAoB;AAC7C;AACA;AACA;;AAEO;AACP,iCAAiC,sDAAc,GAAG,mDAAW;AAC7D,yBAAyB,mFAAmB;AAC5C;AACA;AACA;;AAEO;AACP,iBAAiB,0EAAc;AAC/B;;AAEO;AACP,uBAAuB,wDAAU;AACjC,yBAAyB,sDAAc,GAAG,mDAAW;AACrD,UAAU,mFAAmB;AAC7B;;AAEO;AACP,uBAAuB,wDAAU;AACjC,yBAAyB,sDAAc,GAAG,mDAAW;AACrD,UAAU,sEAAoB;AAC9B;;AAEO;AACP,4BAA4B,sDAAc,GAAG,mDAAW;AACxD,UAAU,mFAAmB;AAC7B;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA,UAAU,gFAAsB,UAAU,8DAAQ;;AAElD,0BAA0B,6DAAgB;AAC1C;;AAEA;;AAEA;AACA;;AAEO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gFAAsB,UAAU,8DAAQ;AACtD;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,gFAAsB,UAAU,8DAAQ;;AAElD;;AAEA;AACA;;AAEO;AACP,SAAS,yCAAK;AACd,uBAAuB,wDAAU;AACjC,yBAAyB,sDAAc,GAAG,mDAAW;AACrD,UAAU,qEAAwB,MAAM,sDAAa;AACrD;;;;;;;;;;;;;;;;AChH6C;;AAEtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAc;AACjC;AACA;AACA;;AAEO;AACP;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEP;;AAEA;AACO;AACA;AACA;;AAEP;AACA;AACO;AACA;AACA;;AAEP;AACO;AACA;AACA;;;;;;;;;;;;;;;;AClCsE;AAC7E;AACA;AACA,eAAe,4DAAmB;AAClC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,iBAAiB,yCAAI;AACrB;AACA;AACA;AACA;AACA,uBAAuB,2CAAM,SAAS;AACtC,uBAAuB,2CAAM,SAAS;AACtC,uBAAuB,2CAAM,SAAS;AACtC,uBAAuB,2CAAM,SAAS;AACtC,wBAAwB,2CAAM;AAC9B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wDAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAAM;AACvB,iBAAiB,2CAAM;AACvB,iBAAiB,2CAAM;AACvB,iBAAiB,2CAAM;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACzIO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;AACO;AACA;;;;;;;;;;;;;;;;;;;ACVsD;;AAE7D;AACA;AACA;;AAEA;AACA,WAAW,yDAAiB,iBAAiB,yDAAiB;AAC9D;;AAEA;AACA,WAAW,uDAAe,iBAAiB,uDAAe;AAC1D;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDoE;AACA;AACnC;AAC+U;;AAEzW;AACP,+BAA+B,wDAAgB;AAC/C;AACA;;AAEA;AACA;AACA,+BAA+B,wDAAgB;AAC/C;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP,gDAAgD,iDAAS;AACzD;;AAEO;AACP;AACA;AACA,qCAAqC;AACrC;AACA,+BAA+B;AAC/B;AACA,wCAAwC;AACxC;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,iDAAiD,wDAAgB;AACjE;AACA;AACA;AACA;;;AAGO;AACP;AACA;AACA;;AAEO;AACP;AACA,eAAe,yCAAK;AACpB,MAAM;AACN,eAAe,yCAAK;AACpB,MAAM;AACN,eAAe,yCAAK;AACpB;AACA;;AAEO;AACP,gCAAgC,oEAA4B,MAAM,qEAA6B;AAC/F;;AAEO;AACP,2CAA2C,4DAAoB;AAC/D,oCAAoC,iEAAyB;AAC7D,oCAAoC,0EAAkC;AACtE,oCAAoC,yDAAiB;AACrD,oCAAoC,8DAAsB;AAC1D,oCAAoC,uEAA+B;AACnE,oCAAoC,6DAAqB;AACzD,oCAAoC,kEAA0B;AAC9D,oCAAoC,2EAAmC;AACvE;;AAEO;AACP,+CAA+C,4DAAoB;AACnE,wCAAwC,6DAAqB;AAC7D,wCAAwC,yDAAiB;AACzD;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,8BAA8B,wDAAgB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEO;AACP,SAAS,yCAAK;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,sBAAsB,sEAAoB,EAAE,sEAAoB;AAChE;;AAEO;AACP;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnLA,sHAAsH,uHAAuH,EAAE,QAAQ,eAAe,OAAO,sGAAsG,iBAAiB,uBAAuB,oEAAoE,EAAE,EAAE,EAAE,GAAG,iDAAiD,EAAE,IAAI,SAAS,oCAAoC,mCAAmC,EAAE,IAAI,gBAAgB,uBAAuB,oEAAoE,EAAE,EAAE,EAAE,GAAG,gDAAgD,EAAE,IAAI,SAAS,oCAAoC,kCAAkC,EAAE,IAAI,eAAe,kDAAkD,uBAAuB,sBAAsB,6CAA6C,EAAE,IAAI,mBAAmB,8CAA8C,iCAAiC,EAAE,IAAI,qBAAqB,OAAO,kGAAkG,kMAAkM,QAAQ,oOAAoO,gKAAgK,gBAAgB,SAAS,kIAAkI,sCAAsC,uCAAuC,mBAAmB,mCAAmC,mBAAmB,kCAAkC,eAAe,0CAA0C,sBAAsB,kBAAkB,yEAAyE,kBAAkB,0CAA0C,sCAAsC,QAAQ,UAAU,0CAA0C,MAAM,uCAAuC,MAAM,SAAS,cAAc,+GAA+G,SAAS,EAAE,GAAG,KAAK,GAAG,MAAM,EAAE,KAAK,GAAG,KAAK,GAAG,KAAK,EAAE,cAAc,gBAAgB,EAAE,KAAK,EAAE,EAAE,wEAAwE,sBAAsB,yCAAyC,gCAAgC,eAAe,sBAAsB,YAAY,SAAS,cAAc,EAAE,UAAU,EAAE,cAAc,iBAAiB,cAAc,kBAAkB,cAAc,mBAAmB,2CAA2C,2BAA2B,EAAE,yBAAyB,EAAE,4BAA4B,EAAE,kBAAkB,QAAQ,mEAAmE,gBAAgB,kCAAkC,oCAAoC,iDAAiD,qBAAqB,kBAAkB,iCAAiC,gBAAgB,kIAAkI,+BAA+B,QAAQ,EAAE,GAAG,GAAG,GAAG,eAAe,YAAY,+LAA+L,OAAO,qDAAqD,sEAAsE,aAAa,kDAAkD,YAAY,OAAO,4CAA4C,aAAa,iBAAiB,mBAAmB,YAAY,YAAY,WAAW,KAAK,mBAAmB,2BAA2B,+CAA+C,qCAAqC,cAAc,gCAAgC,qJAAqJ,oBAAoB,QAAQ,MAAM,iBAAiB,MAAM,eAAe,4IAA4I,wBAAwB,6BAA6B,YAAY,aAAa,+BAA+B,sFAAsF,0CAA0C,iBAAiB,kBAAkB,kBAAkB,0BAA0B,uBAAuB,aAAa,OAAO,oBAAoB,0IAA0I,qBAAqB,aAAa,qCAAqC,UAAU,oBAAoB,kBAAkB,sCAAsC,mBAAmB,oFAAoF,gBAAgB,uDAAuD,yBAAyB,oBAAoB,oCAAoC,+BAA+B,mBAAmB,8FAA8F,4BAA4B,oBAAoB,+BAA+B,qBAAqB,4DAA4D,sFAAsF,wBAAwB,8CAA8C,oBAAoB,4DAA4D,+BAA+B,sEAAsE,4IAA4I,6BAA6B,kJAAkJ,+BAA+B,mFAAmF,sBAAsB,sCAAsC,kBAAkB,MAAM,yBAAyB,KAAK,0BAA0B,2CAA2C,EAAE,IAAI,8CAA8C,EAAE,IAAI,uBAAuB,qEAAqE,gBAAgB,0BAA0B,sDAAsD,cAAc,EAAE,eAAe,IAAI,GAAG,mJAAmJ,QAAQ,UAAU,eAAe,sEAAsE,wBAAwB,aAAa,mDAAmD,mDAAmD,aAAa,wGAAwG,SAAS,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,cAAc,kBAAkB,2DAA2D,uBAAuB,0DAA0D,EAAE,QAAQ,KAAK,QAAQ,YAAY,aAAa,UAAU,iBAAiB,qBAAqB,OAAO,EAAE,2IAA2I,OAAO,MAAM,sBAAsB,cAAc,QAAQ,+KAA+K,UAAU,OAAO,yKAAyK,mBAAmB,sCAAsC,UAAU,MAAM,QAAQ,WAAW,MAAM,UAAU,8BAA8B,MAAM,0DAA0D,MAAM,oCAAoC,MAAM,cAAc,iCAAiC,YAAY,MAAM,mCAAmC,WAAW,OAAO,+OAA+O,kBAAkB,YAAY,yBAAyB,cAAc,6BAA6B,sGAAsG,uFAAuF,MAAM,sFAAsF,MAAM,uFAAuF,MAAM,aAAa,4EAA4E,2EAA2E,MAAM,yCAAyC,SAAS,6BAA6B,4BAA4B,iBAAiB,yBAAyB,cAAc,MAAM,iCAAiC,8DAA8D,qHAAqH,cAAc,oEAAoE,MAAM,aAAa,kEAAkE,MAAM,aAAa,oDAAoD,2EAA2E,MAAM,aAAa,2JAA2J,2EAA2E,MAAM,yCAAyC,SAAS,6BAA6B,4BAA4B,eAAe,yBAAyB,cAAc,mCAAmC,yBAAyB,8IAA8I,+FAA+F,SAAS,kCAAkC,IAAI,kCAAkC,IAAI,kCAAkC,IAAI,mCAAmC,yHAAyH,uBAAuB,uDAAuD,oFAAoF,+aAA+a,yBAAyB,QAAQ,8HAA8H,kEAAkE,qOAAqO,oBAAoB,yEAAyE,kBAAkB,YAAY,yBAAyB,cAAc,0DAA0D,kGAAkG,sBAAsB,UAAU,yGAAyG,iBAAiB,0ZAA0Z,iBAAiB,2BAA2B,eAAe,yBAAyB,cAAc,mCAAmC,yBAAyB,8IAA8I,iJAAiJ,uBAAuB,0dAA0d,yBAAyB,YAAY,seAAse,oBAAoB,oEAAoE,qBAAqB,SAAS,kCAAkC,IAAI,kCAAkC,IAAI,kCAAkC,IAAI,mCAAmC,kGAAkG,SAAS,KAAK,eAAe,YAAY,cAAc,6BAA6B,kCAAkC,mFAAmF,QAAQ,gBAAgB,wKAAwK,wBAAwB,KAAK,iFAAiF,yBAAyB,GAAG,8LAA8L,IAAI,oIAAoI,OAAO,cAAc,gBAAgB,WAAW,eAAe,kBAAkB,MAAM,kDAAkD,QAAQ,4KAA4K,wCAAwC,mBAAmB,SAAS,+BAA+B,kBAAkB,MAAM,aAAa,eAAe,wMAAwM,kBAAkB,wBAAwB,UAAU,eAAe,SAAS,MAAM,oBAAoB,iBAAiB,qBAAqB,uBAAuB,aAAa,OAAO,oBAAoB,yLAAyL,iBAAiB,0CAA0C,iBAAiB,0EAA0E,kBAAkB,wGAAwG,uBAAuB,OAAO,EAAE,cAAc,yCAAyC,sCAAsC,cAAc,6CAA6C,iEAAiE,oBAAoB,sCAAsC,6BAA6B,kBAAkB,uBAAuB,wIAAwI,YAAY,mBAAmB,KAAK,gBAAgB,oCAAoC,0EAA0E,UAAU,gBAAgB,gCAAgC,MAAM,2HAA2H,MAAM,SAAS,sMAAsM,sCAAsC,mBAAmB,kBAAkB,YAAY,0DAA0D,gKAAgK,IAAI,MAAM,8IAA8I,QAAQ,sCAAsC,sBAAsB,EAAE,MAAM,4FAA4F,GAAG,2EAA2E,iIAAiI,gCAAgC,iDAAiD,EAAE,kCAAkC,uBAAuB,EAA4kB;AAC1wnB;;;;;;;UCDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;WACD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA,sGAAsG;WACtG;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA,EAAE;WACF;WACA;;;;;WChEA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://Leetcode-Mastery-Scheduler/./src/popup/delegate/cloudStorageDelegate.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/delegate/leetCodeDelegate.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/delegate/localStorageDelegate.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/delegate/storageDelegate.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/entity/operationHistory.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/entity/problem.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/script/leetcodecn.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/script/submission.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/service/configService.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/service/modeService.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/service/operationHistoryService.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/service/problemService.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/store.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/util/constants.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/util/fsrs.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/util/keys.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/util/sort.js","webpack://Leetcode-Mastery-Scheduler/./src/popup/util/utils.js","webpack://Leetcode-Mastery-Scheduler/./node_modules/ts-fsrs/dist/index.mjs","webpack://Leetcode-Mastery-Scheduler/webpack/bootstrap","webpack://Leetcode-Mastery-Scheduler/webpack/runtime/async module","webpack://Leetcode-Mastery-Scheduler/webpack/runtime/define property getters","webpack://Leetcode-Mastery-Scheduler/webpack/runtime/hasOwnProperty shorthand","webpack://Leetcode-Mastery-Scheduler/webpack/runtime/make namespace object","webpack://Leetcode-Mastery-Scheduler/webpack/before-startup","webpack://Leetcode-Mastery-Scheduler/webpack/startup","webpack://Leetcode-Mastery-Scheduler/webpack/after-startup"],"sourcesContent":["import { simpleStringHash } from \"../util/utils\";\nimport { StorageDelegate } from \"./storageDelegate\";\n\n\nconst getCloudStorageData = async (key) => {\n    return new Promise((resolve, reject) => {\n        chrome.storage.sync.get(key, (result) => {\n            if (result === undefined || result[key] === undefined) {\n                reject(key);\n            } else {\n                resolve(result[key]);\n            }\n        })\n    }).catch((key) => {\n        console.log(`get sync storage data failed for key = ${key}`);\n    });\n}\n\nconst setCloudStorageData = async (key, val) => {\n\n    console.log(\"set to cloud\");\n    console.log([key, val]);\n\n    return new Promise((resolve) => {\n        chrome.storage.sync.set({ [key]: val });\n        resolve();\n    }).catch(e => console.log(e));\n}\n\nconst batchSetCloudStorageDate = async (object) => {\n    return new Promise((resolve) => {\n        chrome.storage.sync.set(object);\n        resolve();\n    }).catch(e => console.log(e));\n}\n\nconst batchGetCloudStorageDate = async (keyArr) => {\n    return new Promise((resolve, reject) => {\n        chrome.storage.sync.get(keyArr, (result) => {\n            if (result === undefined) {\n                reject(key);\n            } else {\n                resolve(result);\n            }\n        })\n    }).catch(e => {\n        console.log(console.log(e));\n    });\n}\n\n/**\n * sharding\n */\n\nconst shardCount = 20;\n\nconst hashKeyToShardIdx = (key) => {\n    const hash = simpleStringHash(key);\n    const shardIndex = (hash % shardCount + shardCount) % shardCount;\n    return shardIndex;\n}\n\nconst isJsonObj = (obj) => {\n    return Object.getPrototypeOf(obj) === Object.prototype;\n}\n\nconst shardedSetCloudStorageData = async (key, val) => {\n    // val should be a JSON object\n    if (!isJsonObj(val)) {\n        throw \"shardedSet only supports JSON type val\";\n    }\n    const shardedVal = {};\n    const objectKeys = Object.keys(val);\n    Array.prototype.forEach.call(objectKeys, (objKey) => {\n        const shardedIdx = hashKeyToShardIdx(objKey);\n        const shardedKey = `${key}#${shardedIdx}`;\n        if (!(shardedKey in shardedVal)) {\n            shardedVal[shardedKey] = {};\n        }\n        shardedVal[shardedKey][objKey] = val[objKey];\n    })\n    \n    console.log(\"set shareded data to cloud:\");\n    console.log(shardedVal);\n\n    await batchSetCloudStorageDate(shardedVal);\n}\n\nconst shardedGetCloudStorageData = async (key) => {\n    const shardedKeyArr = [];\n    for (let i = 0; i < shardCount; i++) {\n        shardedKeyArr.push(`${key}#${i}`);\n    }\n\n    const vals = await batchGetCloudStorageDate(shardedKeyArr);    \n    const res = {};\n\n    if (vals === undefined) return res;\n    for (const shardKey in vals) {\n        Object.assign(res, vals[shardKey]);\n    } \n    console.log(`get ${key} sharded from cloud`)\n    console.log(res);\n    return res;\n}\n\nclass CloudStorageDelegate extends StorageDelegate {\n    constructor(){\n        super();\n        this.get = shardedGetCloudStorageData;\n        this.set = shardedSetCloudStorageData;\n    }\n}\n\nconst cloudStorageDelegate = new CloudStorageDelegate();\nexport default cloudStorageDelegate;","const user_agent =\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.122 Safari/537.36\";\nconst params = {\n    operationName: \"questionTitle\",\n    variables: { titleSlug: \"\" }\n};\nconst headers = {\n    'User-Agent': user_agent,\n    'Connection': 'keep-alive',\n    'Content-Type': 'application/json',\n    'Referer': \"\",\n};\n\nexport const queryProblemInfo = async (slug, site) => {\n    const baseUrl = `https://leetcode.${site}`;\n    params.variables.titleSlug = slug;\n    params.query = `query questionTitle($titleSlug: String!) {\n        question(titleSlug: $titleSlug) {\n          questionFrontendId\n          ${site === \"cn\" ? \"translatedTitle\" : \"title\"}\n          difficulty\n        }\n      }`\n    headers.Referer = `${baseUrl}/problems/${slug}`\n\n    const requestOptions = {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(params),\n        timeout: 10000\n    };\n\n    const response = await fetch(`${baseUrl}/graphql`, requestOptions);\n    const content = await response.json();\n\n    return content.data.question;\n}\n\n/*\n    Extract basic problem information\n*/\nexport const getProblemInfo = async () => {\n    let problemUrl = window.location.href;\n\n    const match = problemUrl.match(/(com|cn)(\\/|$)/);\n    console.log(`current site is ${match[1]}`);\n    const site = match ? match[1] : \"com\";\n\n    const possible_suffix = [\"/submissions/\", \"/description/\", \"/discussion/\", \"/solutions/\"];\n    for (const suffix of possible_suffix) {\n        if (problemUrl.includes(suffix)) {\n            problemUrl = problemUrl.substring(0, problemUrl.lastIndexOf(suffix) + 1);\n            break;\n        }\n    }\n\n    const problemSlug = problemUrl.split(\"/\").splice(-2)[0];\n\n    const question = await queryProblemInfo(problemSlug, site);\n\n    return {\n        problemIndex: question.questionFrontendId,\n        problemName: `${question.questionFrontendId}. ${site === \"cn\" ? question.translatedTitle : question.title}`,\n        problemLevel: question.difficulty,\n        problemUrl\n    };\n}\n","import { StorageDelegate } from \"./storageDelegate\";\n\nexport const getLocalStorageData = async (key) => {\n    return new Promise((resolve, reject) => {\n        chrome.storage.local.get(key, (result) => {\n            if (result === undefined || result[key] === undefined) {\n                reject(key);\n            } else {\n                resolve(result[key]);\n            }\n        })\n    }).catch((key) => {\n        console.log(`get local storage data failed for key = ${key}`);\n    });\n}\n\nexport const setLocalStorageData = async (key, val) => {\n    return new Promise((resolve) => {\n        chrome.storage.local.set({ [key]: val });\n        resolve();\n    }).catch(e => console.log(e));\n}\n\nclass LocalStorageDelegate extends StorageDelegate {\n    constructor(){\n        super();\n        this.get = getLocalStorageData;\n        this.set = setLocalStorageData;\n    }\n}\n\nconst localStorageDelegate = new LocalStorageDelegate();\nexport default localStorageDelegate;","export class StorageDelegate {\n    constructor(){\n        this.get = async (key) => null;\n        this.set = async (key, val) => {};\n    }\n}\n\n","export class OperationHistory {\n    constructor(before, isInCnMode, type, time) {\n        this.before = before;\n        this.isInCnMode = isInCnMode;\n        this.type = type;\n        this.time = time;\n    }\n}\n\nexport const OPS_TYPE = Object.freeze({\n    MASTER: \"mark as mastered\",\n    RESET: \"reset progress\",\n    DELETE: \"delete record\"\n});","export class Problem {\n    constructor(index, name, level, url, submissionTime, proficiency, modificationTime) {\n        this.index = index;\n        this.name = name;\n        this.level = level;\n        this.url = url;\n        this.submissionTime = submissionTime;\n        this.proficiency = proficiency;\n        this.modificationTime = modificationTime;\n        this.isDeleted = false;\n\n        // 更新 FSRS 状态结构\n        this.fsrsState = {\n            difficulty: null,        // 用户反馈的难度 (1-5)\n            quality: null,           // 答题质量 (1-5)\n            lastReview: null,        // 上次复习时间\n            nextReview: null,        // 下次复习时间\n            reviewCount: 0,          // 复习次数\n            stability: 0,            // 记忆稳定性\n            state: 'New',           // FSRS 状态\n            lapses: 0               // 遗忘次数\n        };\n    }\n};\n\nexport const getDeletedProblem = (problemId) => {\n    const deletedProblem = new Problem(problemId, '', '', '', 0, 0, Date.now());\n    deletedProblem.isDeleted = true;\n    return deletedProblem;\n}\n\nexport const copy = (p) => {\n    const newProblem = new Problem(\n        p.index, \n        p.name, \n        p.level, \n        p.url, \n        p.submissionTime, \n        p.proficiency, \n        p.modificationTime\n    );\n    \n    // 复制 isDeleted 状态\n    newProblem.isDeleted = p.isDeleted;\n    \n    // 深拷贝 fsrsState 对象\n    // 深拷贝 fsrsState 对象，兼容旧版本\n    newProblem.fsrsState = {\n        difficulty: p.fsrsState ? p.fsrsState.difficulty : null,\n        quality: p.fsrsState ? p.fsrsState.quality : null,\n        lastReview: p.fsrsState ? p.fsrsState.lastReview : null,\n        nextReview: p.fsrsState ? p.fsrsState.nextReview : null,\n        reviewCount: p.fsrsState ? p.fsrsState.reviewCount : 0,\n        stability: p.fsrsState ? p.fsrsState.stability : 0,\n        state: p.fsrsState ? p.fsrsState.state : 'New',\n        lapses: p.fsrsState ? p.fsrsState.lapses : 0\n    };\n    \n    return newProblem;\n}","import { loadConfigs } from \"../service/configService\";\nimport { submissionListener,addRecordButton } from \"./submission\";\n\nconsole.log(`Hello Leetcode-Mastery-Scheduler!`);\n\nawait loadConfigs();\n// document.addEventListener('click', submissionListener);\n\n\ndocument.addEventListener('DOMContentLoaded', addRecordButton);\n\n// 检查并确保按钮存在\nconst ensureButton = () => {\n    // 如果按钮不存在，添加按钮\n    if (!document.querySelector('.Leetcode-Mastery-Scheduler-record-btn')) {\n        addRecordButton();\n    }\n};\n\n// 创建观察器实例\nconst observer = new MutationObserver(() => {\n    // 每次 DOM 变化时检查按钮\n    ensureButton();\n});\n\n// 开始观察\nconst startObserving = () => {\n    if (document.body) {\n        observer.observe(document.body, {\n            childList: true,  // 观察子节点变化\n            subtree: true     // 观察所有后代节点\n        });\n        // 初始检查\n        ensureButton();\n    } else {\n        // 如果 body 还不存在，等待后重试\n        setTimeout(startObserving, 100);\n    }\n};\n\n// 启动观察\nstartObserving();\n\n// 在页面卸载时停止观察\nwindow.addEventListener('unload', () => {\n    observer.disconnect();\n});\n","import { getDifficultyBasedSteps, getSubmissionResult, isSubmissionSuccess, isSubmitButton, needReview, updateProblemUponSuccessSubmission } from \"../util/utils\";\nimport { getAllProblems, createOrUpdateProblem, getCurrentProblemInfoFromLeetCode, syncProblems } from \"../service/problemService\";\nimport { Problem } from \"../entity/problem\";\nimport { updateProblemWithFSRS } from \"../util/fsrs\";\n/* \n    monitorSubmissionResult will repeateadly check for the submission result.\n*/\nconst monitorSubmissionResult = () => {\n\n    let submissionResult;\n    let maxRetry = 10;\n    const retryInterval = 1000;\n\n    const functionId = setInterval(async () => {\n\n        if (maxRetry <= 0) {\n            clearInterval(functionId);\n            return;\n        }\n\n        submissionResult = getSubmissionResult();\n\n        if (submissionResult === undefined || submissionResult.length === 0) {\n            maxRetry--;\n            return;\n        }\n\n        clearInterval(functionId);\n        let isSuccess = isSubmissionSuccess(submissionResult);\n\n        if (!isSuccess) return;\n\n        const { problemIndex, problemName, problemLevel, problemUrl } = await getCurrentProblemInfoFromLeetCode();\n        await syncProblems();   // prior to fetch local problem data, sync local problem data with cloud\n        const problems = await getAllProblems();\n        let problem = problems[problemIndex];\n        \n        if (problem && problem.isDeleted !== true) {\n            const reviewNeeded = needReview(problem);\n            if (reviewNeeded) {\n                await createOrUpdateProblem(updateProblemUponSuccessSubmission(problem));\n            }\n        } else {\n            problem = new Problem(problemIndex, problemName, problemLevel, problemUrl, Date.now(), getDifficultyBasedSteps(problemLevel)[0], Date.now());\n            await createOrUpdateProblem(problem);\n        }\n        await syncProblems(); // after problem updated, sync to cloud\n\n        console.log(\"Submission successfully tracked!\");\n\n    }, retryInterval)\n};\n\nexport const submissionListener = (event) => {\n\n    const element = event.target;\n    \n    const filterConditions = [\n        isSubmitButton(element),\n        element.parentElement && isSubmitButton(element.parentElement),\n        element.parentElement && element.parentElement.parentElement && isSubmitButton(element.parentElement.parentElement),\n    ]\n\n    const isSubmission = filterConditions.reduce((prev, curr) => prev || curr);\n\n    if (isSubmission) {\n        monitorSubmissionResult();\n    }\n\n};\n\n\n\nexport const addRecordButton = () => {\n    // 添加按钮样式\n    const style = document.createElement('style');\n    style.textContent = `\n        .Leetcode-Mastery-Scheduler-record-btn {\n            position: fixed;\n            bottom: 20px;\n            right: 20px;\n            padding: 12px 20px;\n            background: #2563eb;\n            color: white;\n            border: none;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            box-shadow: 0 2px 10px rgba(37, 99, 235, 0.2);\n            transition: all 0.2s ease;\n            z-index: 9999;\n        }\n        \n        .Leetcode-Mastery-Scheduler-record-btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);\n        }\n    `;\n    document.head.appendChild(style);\n\n    // 创建按钮\n    const button = document.createElement('button');\n    button.className = 'Leetcode-Mastery-Scheduler-record-btn';\n    button.textContent = '记录难度';\n    \n    // 添加点击事件\n    button.addEventListener('click', async () => {\n        const result = await handleFeedbackSubmission();\n        if (result) {\n            console.log(\"Submission successfully tracked!\");\n            console.log(\"难度记录成功！\");\n        }\n    });\n\n    // 添加到页面\n    document.body.appendChild(button);\n};\n\n\n// 抽取成通用的处理函数\nexport async function handleFeedbackSubmission(problem = null) {\n    try {\n        // 显示难度反馈弹窗\n        const feedback = await showDifficultyFeedbackDialog().catch(error => {\n            console.log(error);  // \"用户取消评分\"\n            return null;  // 返回 null 表示用户取消\n        });\n\n        // 如果用户取消，直接返回\n        if (!feedback) {\n            return null;\n        }\n\n        // 如果没有传入 problem，说明是新提交，需要获取题目信息\n        if (!problem) {\n            await syncProblems();   // 同步云端数据\n            const { problemIndex, problemName, problemLevel, problemUrl } = await getCurrentProblemInfoFromLeetCode();\n            const problems = await getAllProblems();\n            problem = problems[problemIndex];\n            \n            if (problem && problem.isDeleted !== true) {\n                problem = updateProblemWithFSRS(problem, feedback);\n                await createOrUpdateProblem(updateProblemUponSuccessSubmission(problem));\n            } else {\n                problem = new Problem(problemIndex, problemName, problemLevel, problemUrl, Date.now(), getDifficultyBasedSteps(problemLevel)[0], Date.now());\n                problem = updateProblemWithFSRS(problem, feedback);\n                await createOrUpdateProblem(problem);\n            }\n        } else {\n            // 如果传入了 problem，说明是复习\n            problem = updateProblemWithFSRS(problem, feedback);\n            await createOrUpdateProblem(problem);\n        }\n\n        await syncProblems(); // 同步到云端\n        console.log(\"提交成功！\");\n        return problem;\n    } catch (error) {\n        console.error(\"提交时出错：\", error);\n        return null;\n    }\n}\n\n\n\n// 6. 显示评分对话框\nconst showDifficultyFeedbackDialog = () => {\n    return new Promise((resolve) => {\n        addDialogStyles();\n\n        const overlay = document.createElement('div');\n        overlay.className = 'fsrs-modal-overlay';\n\n        const dialog = document.createElement('div');\n        dialog.className = 'feedback-dialog';\n        dialog.innerHTML = `\n            <button class=\"close-button\">&times;</button>\n            <h3>这道题对你来说难度如何？</h3>\n            <div class=\"quality-buttons\">\n                <button data-quality=\"1\">完全不会</button>\n                <button data-quality=\"2\">有点难</button>\n                <button data-quality=\"3\">正常</button>\n                <button data-quality=\"4\">简单</button>\n            </div>\n        `;\n        // 点击遮罩层关闭\n        overlay.addEventListener('click', (e) => {\n            if (e.target === overlay) {\n                overlay.remove();\n                resolve(null);\n            }\n        });\n\n        // 单独设置关闭按钮的事件\n        const closeButton = dialog.querySelector('.close-button');\n        closeButton.addEventListener('click', () => {\n            overlay.remove();\n            resolve(null);\n        });\n\n        // 只为难度按钮设置事件\n        dialog.querySelectorAll('.quality-buttons button').forEach(button => {\n            button.addEventListener('click', () => {\n                const quality = parseInt(button.dataset.quality);\n                resolve({ quality });\n                overlay.remove();\n            });\n        });\n\n        \n\n        overlay.appendChild(dialog);\n        document.body.appendChild(overlay);\n    });\n};\n\n// 7. 添加样式\nconst addDialogStyles = () => {\n    const style = document.createElement('style');\n    style.textContent = `\n        .fsrs-modal-overlay {\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: rgba(0, 0, 0, 0.6);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 9999;\n            backdrop-filter: blur(2px);\n        }\n\n        .feedback-dialog {\n            background: #ffffff;\n            padding: 24px;\n            border-radius: 12px;\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n            min-width: 320px;\n            animation: slideIn 0.3s ease;\n        }\n\n        @keyframes slideIn {\n            from {\n                transform: translateY(-20px);\n                opacity: 0;\n            }\n            to {\n                transform: translateY(0);\n                opacity: 1;\n            }\n        }\n\n        .close-button {\n            float: right;           /* 使用浮动靠右 */\n            margin: -12px -12px 0 0;  /* 调整位置，抵消父元素的 padding */\n            background: none;\n            border: none;\n            font-size: 24px;\n            color: #666;\n            cursor: pointer;\n            padding: 0;\n            width: 30px;\n            height: 30px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-radius: 50%;\n            transition: all 0.2s;\n        }\n\n        .close-button:hover {\n            background: #f3f4f6;\n            color: #1f2937;\n        }\n\n        .feedback-dialog h3 {\n            color: #2c3e50;\n            font-size: 18px;\n            margin: 0 0 20px 0;  /* 添加底部间距 */\n            text-align: center;\n            font-weight: 600;\n            clear: both;           /* 清除浮动 */\n        }\n\n        .quality-buttons {\n            display: flex;\n            flex-direction: column;\n            gap: 12px;\n        }\n\n        .quality-buttons button {\n            padding: 12px 20px;\n            border: none;\n            border-radius: 8px;\n            background: #f8f9fa;\n            cursor: pointer;\n            transition: all 0.2s ease;\n            font-size: 15px;\n            color: #495057;\n            border: 1px solid #e9ecef;\n        }\n\n        .quality-buttons button:hover {\n            background: #2563eb;\n            color: white;\n            transform: translateY(-1px);\n            box-shadow: 0 2px 8px rgba(37, 99, 235, 0.2);\n        }\n\n        .quality-buttons button:nth-child(1) { border-left: 4px solid #dc2626; }\n        .quality-buttons button:nth-child(2) { border-left: 4px solid #ea580c; }\n        .quality-buttons button:nth-child(3) { border-left: 4px solid #16a34a; }\n        .quality-buttons button:nth-child(4) { border-left: 4px solid #2563eb; }\n\n        .quality-buttons button:nth-child(1):hover { background: #dc2626; }\n        .quality-buttons button:nth-child(2):hover { background: #ea580c; }\n        .quality-buttons button:nth-child(3):hover { background: #16a34a; }\n        .quality-buttons button:nth-child(4):hover { background: #2563eb; }\n    `;\n    document.head.appendChild(style);\n};","import { getLocalStorageData, setLocalStorageData } from \"../delegate/localStorageDelegate\"\nimport { store } from \"../store\";\nimport { CONFIG_INNER_KEY_ENABLE_CLOUD, CONFIG_KEY, PROBLEM_SORT_BY_KEY, REVIEW_INTV_KEY,DEFAULT_CARD_LIMIT_KEY, DEFAULT_CARD_LIMIT_VALUE } from \"../util/keys\"\nimport { getSorterById, idOf, problemSorters } from \"../util/sort\";\n\n// configurable review intervals (to be integrated)\n\nexport const getReviewIntervals = async () => {\n    return await getLocalStorageData(REVIEW_INTV_KEY);\n}\n\nexport const setReviewIntervals = async (customIntv) => {\n    if (customIntv == null || customIntv == undefined) return;\n    const {easyIntv, mediumIntv, hardIntv} = store;\n    customIntv.easyIntv = customIntv.easyIntv || easyIntv;\n    customIntv.mediumIntv = customIntv.mediumIntv || mediumIntv;\n    customIntv.hardIntv = customIntv.hardIntv || hardIntv;\n    await setLocalStorageData(REVIEW_INTV_KEY, customIntv);\n}\n\nexport const loadReviewIntervals = async () => {\n    const customIntv = await getReviewIntervals();\n    if (customIntv !== undefined) {\n        Object.assign(store, customIntv);\n    }\n}\n\n\n// configurable problem sort by\nexport const getProblemSorter = async () => {\n    return await getLocalStorageData(PROBLEM_SORT_BY_KEY);\n}\n\nexport const setProblemSorter = async (sorterId) => {\n    await setLocalStorageData(PROBLEM_SORT_BY_KEY, sorterId);\n}\n\nexport const loadProblemSorter = async () => {\n    const sorterId = await getProblemSorter() | idOf(problemSorters.sortByReviewTimeAsc);\n    store.problemSortBy = getSorterById(sorterId);\n}\n\n\n\n// config cloud sync\nexport const isCloudSyncEnabled = async () => {\n    const configs = await getLocalStorageData(CONFIG_KEY);\n    const isEnabled = configs !== undefined ? configs[CONFIG_INNER_KEY_ENABLE_CLOUD] : false;\n    if (isEnabled === undefined) {\n        isEnabled = false;\n    }\n    return isEnabled;\n}\n\nexport const switchCloudSyncEnabled = async () => {\n    const configs = await getLocalStorageData(CONFIG_KEY);\n    const isEnabled = configs[CONFIG_INNER_KEY_ENABLE_CLOUD];\n    if (isEnabled === undefined) {\n        isEnabled = false;\n    }\n    configs[CONFIG_INNER_KEY_ENABLE_CLOUD] = !isEnabled;\n    await setLocalStorageData(CONFIG_KEY, configs);\n}\n\nexport const setCloudSyncEnabled = async (isEnabled) => {\n    const configs = await getLocalStorageData(CONFIG_KEY) || {\n        CONFIG_INNER_KEY_ENABLE_CLOUD: false\n    };\n    configs[CONFIG_INNER_KEY_ENABLE_CLOUD] = isEnabled;\n    await setLocalStorageData(CONFIG_KEY, configs);\n}\n\n\nexport const loadCloudSyncConfig = async () => {\n    store.isCloudSyncEnabled = await isCloudSyncEnabled();\n}\n\n// 获取默认卡片数量\nexport const getDefaultCardLimit = async () => {\n    const limit = await getLocalStorageData(DEFAULT_CARD_LIMIT_KEY);\n    return limit !== undefined ? limit : DEFAULT_CARD_LIMIT_VALUE;\n}\n\n// 设置默认卡片数量\nexport const setDefaultCardLimit = async (limit) => {\n    if (limit == null || limit == undefined) return;\n    await setLocalStorageData(DEFAULT_CARD_LIMIT_KEY, limit);\n}\n\n// 加载默认卡片数量到 store\nexport const loadDefaultCardLimit = async () => {\n    store.defaultCardLimit = await getDefaultCardLimit();\n}\n\n\nexport const loadConfigs = async () => {\n    await loadReviewIntervals();\n    await loadProblemSorter();\n    await loadCloudSyncConfig();\n    await loadDefaultCardLimit();  // 添加这一行\n}","import { getLocalStorageData, setLocalStorageData } from \"../delegate/localStorageDelegate\"\nimport { CN_MODE } from \"../util/keys\"\n\nexport const isInCnMode = async () => {\n    let cnMode = await getLocalStorageData(CN_MODE);\n    console.log(`current cnMode is ${cnMode}`);\n    if (cnMode === undefined) {\n        await setLocalStorageData(CN_MODE, false);\n        cnMode = false;\n    }\n    return cnMode;\n}\n\nexport const toggleMode = async () => {\n    const cnMode = await isInCnMode();\n    console.log(`got current cnMode before toggle}`);\n    await setLocalStorageData(CN_MODE, !cnMode);\n    console.log(\"cnMode toggled\");\n}","import { OperationHistory } from \"../entity/operationHistory\"\nimport { isInCnMode } from \"./modeService\";\nimport { OPS_HISTORY_KEY } from \"../util/keys\";\nimport { getLocalStorageData, setLocalStorageData } from \"../delegate/localStorageDelegate\";\nimport { getProblemsByMode, setProblemsByMode } from \"./problemService\";\nimport { copy } from \"../entity/problem\";\n\nconst CACHE_SIZE = 10;\n\nexport const addNewOperationHistory = async (before, type, time) => {\n    const snapShot = copy(before);\n    snapShot.isDeleted = false;\n    const newOperationHistory = new OperationHistory(snapShot, await isInCnMode(), type, time);\n    let opsHistory = await getLocalStorageData(OPS_HISTORY_KEY);\n    if (opsHistory === undefined) {\n        opsHistory = [];\n    }\n    if (opsHistory.length === CACHE_SIZE) {\n        opsHistory.shift();\n    }\n    opsHistory.push(newOperationHistory);\n    await setLocalStorageData(OPS_HISTORY_KEY, opsHistory);\n}\n\nexport const popLatestOperationHistory = async () => {\n    const opsHistory = await getLocalStorageData(OPS_HISTORY_KEY);\n    if (opsHistory === undefined || opsHistory.length === 0) {\n        return undefined;\n    }\n\n    const latestOpsHistory = opsHistory.pop();\n    await setLocalStorageData(OPS_HISTORY_KEY, opsHistory);\n    return latestOpsHistory;\n}\n\nexport const undoLatestOperation = async () => {\n    const operationHistory = await popLatestOperationHistory();\n    if (operationHistory === undefined) {\n        return;\n    }\n    const { before: problemBefore, isInCnMode } = operationHistory;\n    problemBefore.modificationTime = Date.now();    // need to update the mod time to make this latest change to override cloud data\n\n    const problems = await getProblemsByMode(isInCnMode);\n    problems[problemBefore.index] = problemBefore;\n    await setProblemsByMode(problems, isInCnMode);\n}\n\nexport const hasOperationHistory = async () => {\n    const opsHistory = await getLocalStorageData(OPS_HISTORY_KEY);\n    return opsHistory !== undefined && opsHistory.length > 0;\n}","import { getProblemInfo } from \"../delegate/leetCodeDelegate\";\nimport { getLocalStorageData, setLocalStorageData } from \"../delegate/localStorageDelegate\";\nimport { addNewOperationHistory } from \"./operationHistoryService\";\nimport { OPS_TYPE } from \"../entity/operationHistory\";\nimport { forggettingCurve } from \"../util/constants\";\nimport { CN_PROBLEM_KEY, PROBLEM_KEY } from \"../util/keys\";\nimport { isInCnMode } from \"./modeService\";\nimport { store } from \"../store\";\nimport { mergeProblems, syncLocalAndCloudStorage } from \"../util/utils\";\nimport cloudStorageDelegate from \"../delegate/cloudStorageDelegate\";\nimport { copy, getDeletedProblem } from \"../entity/problem\";\n\nexport const getAllProblems = async () => {\n    let cnMode = await isInCnMode();\n    const queryKey = cnMode ? CN_PROBLEM_KEY : PROBLEM_KEY;\n    let problems = await getLocalStorageData(queryKey);\n    if (problems === undefined) problems = {};\n    return problems;\n}\n\nexport const getAllProblemsInCloud = async () => {\n    let cnMode = await isInCnMode();\n    const queryKey = cnMode ? CN_PROBLEM_KEY : PROBLEM_KEY;\n    let problems = await cloudStorageDelegate.get(queryKey);\n    if (problems === undefined) problems = {};\n    return problems;\n}\n\nexport const getProblemsByMode = async (useCnMode) => {\n    const queryKey = useCnMode ? CN_PROBLEM_KEY : PROBLEM_KEY;\n    let problems = await getLocalStorageData(queryKey);\n    if (problems === undefined) problems = {};\n    return problems;\n}\n\nexport const getCurrentProblemInfoFromLeetCode = async () => {\n    return await getProblemInfo();\n}\n\nexport const setProblems = async (problems) => {\n    let cnMode = await isInCnMode();\n    const key = cnMode ? CN_PROBLEM_KEY : PROBLEM_KEY;\n    await setLocalStorageData(key, problems);\n}\n\nexport const setProblemsToCloud = async (problems) => {\n    let cnMode = await isInCnMode();\n    const key = cnMode ? CN_PROBLEM_KEY : PROBLEM_KEY;\n    await cloudStorageDelegate.set(key, problems);\n}\n\nexport const setProblemsByMode = async (problems, useCnMode) => {\n    const key = useCnMode ? CN_PROBLEM_KEY : PROBLEM_KEY;\n    await setLocalStorageData(key, problems);\n}\n\nexport const createOrUpdateProblem = async (problem) => {\n    problem.modificationTime = Date.now();\n    const problems = await getAllProblems();\n    problems[problem.index] = problem;\n    await setProblems(problems);\n}\n\nexport const markProblemAsMastered = async (problemId) => {\n    let problems = await getAllProblems();\n    let problem = problems[problemId];\n\n    await addNewOperationHistory(problem, OPS_TYPE.MASTER, Date.now());\n\n    problem.proficiency = forggettingCurve.length;\n    problem.modificationTime = Date.now();\n\n    problems[problemId] = problem;\n\n    await setProblems(problems);\n};\n\nexport const deleteProblem = async (problemId) => {\n\n    let problems = await getAllProblems();\n    const problem = problems[problemId];\n    \n    // soft delete\n    if (problem) {\n        problem.isDeleted = true;\n        problem.modificationTime = Date.now();\n        await addNewOperationHistory(problem, OPS_TYPE.DELETE, Date.now());\n        problems[problemId] = problem;\n        await setProblems(problems);\n    }\n};\n\nexport const resetProblem = async (problemId) => {\n    let problems = await getAllProblems();\n    let problem = problems[problemId];\n\n    problem.proficiency = 0;\n    problem.submissionTime = Date.now() - 24 * 60 * 60 * 1000;\n    problem.modificationTime = Date.now();\n\n    await addNewOperationHistory(problem, OPS_TYPE.RESET, Date.now());\n\n    problems[problemId] = problem;\n\n    await setProblems(problems);\n};\n\nexport const syncProblems = async () => {\n    if (!store.isCloudSyncEnabled) return;\n    let cnMode = await isInCnMode();\n    const key = cnMode ? CN_PROBLEM_KEY : PROBLEM_KEY;\n    await syncLocalAndCloudStorage(key, mergeProblems); \n}","import { problemSorters } from \"./util/sort\";\n\nexport const store = {\n    needReviewProblems: null,\n    reviewScheduledProblems: null,\n    completedProblems: null,\n    toReviewPage: 1,\n    scheduledPage: 1,\n    completedPage: 1,\n    toReviewMaxPage: null,\n    scheduledMaxPage: null,\n    completedMaxPage: null,\n    tooltipTriggerList: null,\n    tooltipList: null,\n    easyIntv: [1, 3],\n    mediumIntv: [1, 3, 4],\n    hardIntv: [0, 1, 2, 3, 4],\n    problemSortBy: problemSorters.sortByReviewTimeAsc,\n    isCloudSyncEnabled: false,\n    defaultCardLimit: 3\n}\n\nexport const daily_store = {\n    dailyReviewProblems: null,\n    reviewScheduledProblems: null\n\n}","export const forggettingCurve = [\n    1 * 24 * 60,    // 1 day\n    2 * 24 * 60,    // 2 day\n    4 * 24 * 60,    // 4 day\n    7 * 24 * 60,    // 7 day\n    15 * 24 * 60    // 15 day\n];\n\nexport const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\nexport const PAGE_SIZE = 5;\n\nexport const CN_LABLE = 'LeetCode - China ';\nexport const GL_LABLE = 'LeetCode - Global';\n\nexport const SUBMIT_BUTTON_ATTRIBUTE_NAME = \"data-e2e-locator\";\nexport const SUBMIT_BUTTON_ATTRIBUTE_VALUE = \"console-submit-button\";\n\n// leetcode UI classnames\n\n// cn\nexport const SUCCESS_CLASSNAME_CN = \"text-green-s dark:text-dark-green-s flex flex-1 items-center gap-2 text-[16px] font-medium leading-6\";\nexport const WRONG_ANSWER_CLASSNAME_CN = \"whitespace-nowrap text-xl font-medium text-red-s dark:text-dark-red-s\";\nexport const COMPILE_ERROR_AND_TLE_CLASSNAME_CN = \"mr-1 flex-1 whitespace-nowrap text-xl font-medium text-red-s dark:text-dark-red-s\";\n\n// global\n// old UI\nexport const SUCCESS_CLASSNAME = \"success__3Ai7\";\nexport const WRONG_ANSWER_CLASSNAME = \"error__2Ft1\";\nexport const COMPILE_ERROR_AND_TLE_CLASSNAME = \"error__10k9\";\n\n// new UI\nexport const SUCCESS_CLASSNAME_NEW = \"text-green-s dark:text-dark-green-s flex flex-1 items-center gap-2 text-[16px] font-medium leading-6\";\nexport const WRONG_ANSWER_CLASSNAME_NEW = \"whitespace-nowrap text-xl font-medium text-red-s dark:text-dark-red-s\";\nexport const COMPILE_ERROR_AND_TLE_CLASSNAME_NEW = \"mr-1 flex-1 whitespace-nowrap text-xl font-medium text-red-s dark:text-dark-red-s\";","import { FSRS, Rating, createEmptyCard, generatorParameters } from 'ts-fsrs';\r\n\r\n// 1. 创建自定义参数\r\nconst params = generatorParameters({\r\n    request_retention: 0.9,          // 期望记忆保持率 90%\r\n    maximum_interval: 365,           // 最大间隔天数\r\n    enable_fuzz: false,              // 禁用时间模糊化\r\n    enable_short_term: false          // 启用短期记忆影响\r\n});\r\n\r\n// 2. 创建 FSRS 实例\r\nconst fsrs = new FSRS(params);\r\n\r\n// 3. 评分映射（4个等级）\r\nconst qualityToRating = (quality) => {\r\n    switch(quality) {\r\n        case 1: return Rating.Again;  // 完全不会\r\n        case 2: return Rating.Hard;   // 有点难\r\n        case 3: return Rating.Good;   // 正常\r\n        case 4: return Rating.Easy;   // 简单\r\n        default: return Rating.Good;\r\n    }\r\n};\r\n\r\n// 4. 计算下次复习时间\r\nexport const calculateNextReview = (problem, feedback) => {\r\n    try {\r\n        const now = new Date();\r\n\r\n        // 如果没有 fsrsState，创建一个默认的\r\n        if (!problem.fsrsState) {\r\n            problem.fsrsState = {\r\n                difficulty: null,\r\n                quality: null,\r\n                lastReview: problem.submissionTime || now.getTime(),\r\n                nextReview: null,\r\n                reviewCount: 0,\r\n                stability: 0,\r\n                state: 'New',\r\n                lapses: 0\r\n            };\r\n        }\r\n\r\n        const lastReview = problem.fsrsState.lastReview \r\n            ? new Date(problem.fsrsState.lastReview)\r\n            : new Date(problem.submissionTime || now.getTime());\r\n\r\n        let card = createEmptyCard(lastReview);\r\n        \r\n        if (problem.fsrsState.state !== 'New') {\r\n            card = {\r\n                ...card,\r\n                state: problem.fsrsState.state,\r\n                stability: problem.fsrsState.stability || 0,\r\n                difficulty: problem.fsrsState.difficulty || 0,\r\n                reps: problem.fsrsState.reviewCount || 0,\r\n                lapses: problem.fsrsState.lapses || 0,\r\n                // 添加时间相关字段\r\n                elapsed_days: problem.fsrsState.lastReview \r\n                    ? (now - new Date(problem.fsrsState.lastReview)) / (24 * 60 * 60 * 1000)\r\n                    : 0,\r\n                scheduled_days: problem.fsrsState.nextReview \r\n                    ? (new Date(problem.fsrsState.nextReview) - new Date(problem.fsrsState.lastReview)) / (24 * 60 * 60 * 1000)\r\n                    : 0\r\n            };\r\n        }\r\n        \r\n        const rating = qualityToRating(feedback.quality);\r\n        const scheduling_cards = fsrs.repeat(card, now);\r\n        const result = scheduling_cards[rating];\r\n\r\n        if (!result || !result.card) {\r\n            console.error('FSRS calculation failed:', result);\r\n            // 默认间隔\r\n            const defaultDays = {\r\n                [Rating.Again]: 1,\r\n                [Rating.Hard]: 3,\r\n                [Rating.Good]: 7,\r\n                [Rating.Easy]: 14\r\n            }[rating] || 1;\r\n\r\n            return {\r\n                nextReview: now.getTime() + (defaultDays * 24 * 60 * 60 * 1000),\r\n                stability: card.stability,\r\n                difficulty: card.difficulty,\r\n                state: card.state,\r\n                reps: card.reps + 1,\r\n                lapses: card.lapses\r\n            };\r\n        }\r\n\r\n        // 确保间隔至少为1天\r\n        const nextReviewTime = Math.max(\r\n            result.card.due.getTime(),\r\n            now.getTime() + (24 * 60 * 60 * 1000)\r\n        );\r\n\r\n        return {\r\n            nextReview: nextReviewTime,\r\n            stability: result.card.stability,\r\n            difficulty: result.card.difficulty,\r\n            state: result.card.state,\r\n            reps: result.card.reps,\r\n            lapses: result.card.lapses\r\n        };\r\n    } catch (error) {\r\n        console.error('Error in calculateNextReview:', error);\r\n        return {\r\n            nextReview: now.getTime() + (24 * 60 * 60 * 1000),\r\n            stability: problem.fsrsState.stability || 0,\r\n            difficulty: problem.fsrsState.difficulty || 0,\r\n            state: problem.fsrsState.state || 'New',\r\n            reps: (problem.fsrsState.reviewCount || 0) + 1,\r\n            lapses: problem.fsrsState.lapses || 0\r\n        };\r\n    }\r\n};\r\n\r\n// 5. 更新问题状态\r\nexport const updateProblemWithFSRS = (problem, feedback) => {\r\n    const now = Date.now();\r\n    const fsrsResult = calculateNextReview(problem, feedback);\r\n\r\n    problem.fsrsState = {\r\n        ...problem.fsrsState,\r\n        difficulty: fsrsResult.difficulty,\r\n        stability: fsrsResult.stability,\r\n        state: fsrsResult.state,\r\n        lastReview: now,\r\n        nextReview: fsrsResult.nextReview,\r\n        reviewCount: fsrsResult.reps,\r\n        lapses: fsrsResult.lapses,\r\n        quality: feedback.quality\r\n    };\r\n\r\n    problem.modificationTime = now;\r\n    return problem;\r\n};\r\n","export const CN_MODE = 'cn_mode';\nexport const CN_PROBLEM_KEY = 'cn_records';\nexport const PROBLEM_KEY = 'records';\nexport const REVIEW_INTV_KEY = 'review_intervals';\nexport const OPS_HISTORY_KEY = 'operation_history';\nexport const PROBLEM_SORT_BY_KEY = 'problem_sort_by';\nexport const CONFIG_KEY = 'configs';\nexport const CONFIG_INNER_KEY_ENABLE_CLOUD = 'enable_cloud';\n// 添加新的常量\nexport const DEFAULT_CARD_LIMIT_KEY = 'defaultCardLimit';\nexport const DEFAULT_CARD_LIMIT_VALUE = 3;","import { getDelayedHours, getNextReviewTime } from \"./utils\";\n\nconst reverse = (sorter) => {\n    return (p1, p2) => -sorter(p1, p2)\n}\n\nconst problemReviewTimeComparator = (p1, p2) => {\n    return getNextReviewTime(p1).valueOf() - getNextReviewTime(p2).valueOf();\n}\n\nconst problemDelayTimeComparator = (p1, p2) => {\n    return getDelayedHours(p2).valueOf() - getDelayedHours(p1).valueOf();\n}\n\n// functions used to sort problems\nexport const problemSorters = {\n    // reviewTimeSorter:\n    sortByReviewTimeDesc:   reverse(problemReviewTimeComparator),\n    sortByReviewTimeAsc:    problemReviewTimeComparator,\n    sortByDelayHoursDesc:   problemDelayTimeComparator,\n    sortByDelayHoursAsc:    reverse(problemDelayTimeComparator)\n}\n\nexport const problemSorterArr = [\n    problemSorters.sortByReviewTimeAsc, \n    problemSorters.sortByReviewTimeDesc,\n    problemSorters.sortByDelayHoursAsc,\n    problemSorters.sortByDelayHoursDesc\n];\n\nexport const idOf = (sorter) => {\n    return problemSorterArr.indexOf(sorter);\n}\n\nexport const getSorterById = (id) => {\n    return problemSorterArr[id];\n}\n\nexport const descriptionOf = (sorter) => {\n    let description;\n    switch (sorter) {\n        case problemSorters.sortByDelayHoursAsc:\n            description = \"Sort By Review Delayed Hours (ASC)\";\n            break;\n        case problemSorters.sortByDelayHoursDesc:\n            description = \"Sort By Review Delayed Hours (DESC)\";\n            break;\n        case problemSorters.sortByReviewTimeAsc:\n            description = \"Sort By Next Scheduled Review Time (ASC)\";\n            break;\n        case problemSorters.sortByReviewTimeDesc:\n            description = \"Sort By Next Scheduled Review Time (DESC)\";\n            break;\n        default:\n            description = \"\";\n    }\n    return description;\n} ","import localStorageDelegate from \"../delegate/localStorageDelegate\";\nimport cloudStorageDelegate from \"../delegate/cloudStorageDelegate\";\nimport { store } from \"../store\";\nimport { COMPILE_ERROR_AND_TLE_CLASSNAME, COMPILE_ERROR_AND_TLE_CLASSNAME_CN, COMPILE_ERROR_AND_TLE_CLASSNAME_NEW, PAGE_SIZE, SUBMIT_BUTTON_ATTRIBUTE_NAME, SUBMIT_BUTTON_ATTRIBUTE_VALUE, SUCCESS_CLASSNAME, SUCCESS_CLASSNAME_CN, SUCCESS_CLASSNAME_NEW, WRONG_ANSWER_CLASSNAME, WRONG_ANSWER_CLASSNAME_CN, WRONG_ANSWER_CLASSNAME_NEW, forggettingCurve } from \"./constants\";\n\nexport const needReview = (problem) => {\n    if (problem.proficiency >= forggettingCurve.length) {\n        return false;\n    }\n\n    const currentTime = Date.now();\n    const timeDiffInMinute = (currentTime - problem.submissionTime) / (1000 * 60);\n    return timeDiffInMinute >= forggettingCurve[problem.proficiency];\n};\n\nexport const scheduledReview = (problem) => {\n    // return !needReview(problem) && problem.proficiency < 5;\n    return true;\n};\n\nexport const isCompleted = (problem) => {\n    return problem.proficiency === 5;\n};\n\nexport const calculatePageNum = (problems) => {\n    return Math.max(Math.ceil(problems.length / PAGE_SIZE), 1);;\n}\n\nexport const getLevelColor = (level) => {\n    switch (level) {\n        case \"Easy\":\n            return \"rgb(67, 1 71)\";  // 绿色\n        case \"Medium\":\n            return \"#ff9800\";  // 橙色\n        case \"Hard\":\n            return \"rgb(233, 30, 99)\";  // 红色\n        default:\n            return \"inherit\";\n    }\n};\n\n\nexport const getNextReviewTime = (problem) => {\n    // 如果有 FSRS 的 nextReview，优先使用它\n    let date;\n    if (problem.fsrsState && problem.fsrsState.nextReview) {\n        date = new Date(problem.fsrsState.nextReview);\n    } else {\n        // 否则使用旧的计算方式（向后兼容）\n        date = new Date(problem.submissionTime + forggettingCurve[problem.proficiency] * 60 * 1000);\n    }\n    \n    return date;\n}\n\n\nexport const getDelayedHours = (problem) => {\n    const nextReviewDate = getNextReviewTime(problem);\n    return Math.round((Date.now() - nextReviewDate) / (60 * 60 * 1000));\n}\n\nexport const getDifficultyBasedSteps = (diffculty) => {\n    if (diffculty === \"Easy\") {\n        return store.easyIntv;\n    } else if (diffculty === \"Medium\") {\n        return store.mediumIntv;\n    } else {\n        return store.hardIntv;\n    }\n}\n\nexport const isSubmitButton = (element) => {\n    return element.getAttribute(SUBMIT_BUTTON_ATTRIBUTE_NAME) === SUBMIT_BUTTON_ATTRIBUTE_VALUE;\n}\n\nexport const getSubmissionResult = () => {\n    return document.getElementsByClassName(SUCCESS_CLASSNAME_CN)[0] ||\n    document.getElementsByClassName(WRONG_ANSWER_CLASSNAME_CN)[0] ||\n    document.getElementsByClassName(COMPILE_ERROR_AND_TLE_CLASSNAME_CN)[0] ||\n    document.getElementsByClassName(SUCCESS_CLASSNAME)[0] ||\n    document.getElementsByClassName(WRONG_ANSWER_CLASSNAME)[0] ||\n    document.getElementsByClassName(COMPILE_ERROR_AND_TLE_CLASSNAME)[0] ||\n    document.getElementsByClassName(SUCCESS_CLASSNAME_NEW)[0] ||\n    document.getElementsByClassName(WRONG_ANSWER_CLASSNAME_NEW)[0] ||\n    document.getElementsByClassName(COMPILE_ERROR_AND_TLE_CLASSNAME_NEW)[0];\n}\n\nexport const isSubmissionSuccess = (submissionResult) => {\n    return submissionResult.className.includes(SUCCESS_CLASSNAME_CN) ||\n    submissionResult.className.includes(SUCCESS_CLASSNAME_NEW) ||\n    submissionResult.className.includes(SUCCESS_CLASSNAME);\n}\n\nexport const updateProblemUponSuccessSubmission = (problem) => {\n    const steps = getDifficultyBasedSteps(problem.problemLevel);\n    let nextProficiencyIndex;\n    for (const i of steps) {\n        if (i > problem.proficiency) {\n            nextProficiencyIndex = i;\n            break;\n        }\n    }\n\n    // further review needed\n    if (nextProficiencyIndex !== undefined) {\n        problem.proficiency = nextProficiencyIndex;\n        // already completed all review\n    } else {\n        problem.proficiency = forggettingCurve.length;\n    }\n    problem.submissionTime = Date.now();\n    problem.modificationTime = Date.now();\n    return problem;\n}\n\n// for sync data over cloud & local\nexport const mergeProblem = (p1, p2) => {\n    if (p2 === undefined || p2 === null) return p1;\n    if (p1 === undefined || p1 === null) return p2;\n    if (p2.modificationTime === undefined || p2.modificationTime === null) return p1;\n    if (p1.modificationTime === undefined || p1.modificationTime === null) return p2;\n\n    return p1.modificationTime > p2.modificationTime ? p1 : p2;\n}\n\nexport const mergeProblems = (ps1, ps2) => {\n    const problemIdSet = new Set([...Object.keys(ps1), ...Object.keys(ps2)]);\n    const ps = {}\n    problemIdSet.forEach(id => {\n        const p1 = ps1[id], p2 = ps2[id];\n        const p = mergeProblem(p1, p2);\n        ps[id] = p;\n    })\n\n    return ps;\n}\n\nexport const syncStorage = async (sd1, sd2, key, merger) => {\n    if (!store.isCloudSyncEnabled) return;\n    const data1 = await sd1.get(key) || {};\n    const data2 = await sd2.get(key) || {};\n    const merged = merger(data1, data2);\n\n    console.log(\"merging data from local and from cloud. local:\")\n    console.log(data1);\n    console.log(\"merging data from local and from cloud. cloud:\")\n    console.log(data2);\n    await sd1.set(key, merged);\n    await sd2.set(key, merged);\n}\n\nexport const syncLocalAndCloudStorage = async (key, merger) => {\n    await syncStorage(localStorageDelegate, cloudStorageDelegate, key, merger);\n}\n\nexport const simpleStringHash = (key) => {\n    let hash = 0;\n    for (let i = 0; i < key.length; i++) {\n        const char = key.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash |= 0;\n    }\n    return hash;\n}\n\n// 获取当前可检索性的辅助函数\nexport const getCurrentRetrievability = (problem) => {\n    if (!problem.fsrsState?.stability || !problem.fsrsState?.lastReview) {\n        return 1;\n    }\n    \n    const now = Date.now();\n    const elapsedDays = (now - problem.fsrsState.lastReview) / (24 * 60 * 60 * 1000);\n    return calculateRetrievability(problem.fsrsState.stability, elapsedDays);\n};\n\n// 计算可检索性的辅助函数\nconst calculateRetrievability = (stability, elapsedDays) => {\n    return Math.exp(Math.log(0.9) * elapsedDays / stability);\n};\n","var u=(r=>(r[r.New=0]=\"New\",r[r.Learning=1]=\"Learning\",r[r.Review=2]=\"Review\",r[r.Relearning=3]=\"Relearning\",r))(u||{}),d=(r=>(r[r.Manual=0]=\"Manual\",r[r.Again=1]=\"Again\",r[r.Hard=2]=\"Hard\",r[r.Good=3]=\"Good\",r[r.Easy=4]=\"Easy\",r))(d||{});class h{static card(t){return{...t,state:h.state(t.state),due:h.time(t.due),last_review:t.last_review?h.time(t.last_review):void 0}}static rating(t){if(typeof t==\"string\"){const e=t.charAt(0).toUpperCase(),i=t.slice(1).toLowerCase(),a=d[`${e}${i}`];if(a===void 0)throw new Error(`Invalid rating:[${t}]`);return a}else if(typeof t==\"number\")return t;throw new Error(`Invalid rating:[${t}]`)}static state(t){if(typeof t==\"string\"){const e=t.charAt(0).toUpperCase(),i=t.slice(1).toLowerCase(),a=u[`${e}${i}`];if(a===void 0)throw new Error(`Invalid state:[${t}]`);return a}else if(typeof t==\"number\")return t;throw new Error(`Invalid state:[${t}]`)}static time(t){if(typeof t==\"object\"&&t instanceof Date)return t;if(typeof t==\"string\"){const e=Date.parse(t);if(isNaN(e))throw new Error(`Invalid date:[${t}]`);return new Date(e)}else if(typeof t==\"number\")return new Date(t);throw new Error(`Invalid date:[${t}]`)}static review_log(t){return{...t,due:h.time(t.due),rating:h.rating(t.rating),state:h.state(t.state),review:h.time(t.review)}}}const F=.9,A=36500,L=[.40255,1.18385,3.173,15.69105,7.1949,.5345,1.4604,.0046,1.54575,.1192,1.01925,1.9395,.11,.29605,2.2698,.2315,2.9898,.51655,.6621],G=!1,k=!0,j=\"v4.6.0 using FSRS-5.0\",M=r=>{let t=L;return r?.w&&(r.w.length===19?t=r?.w:r.w.length===17&&(t=r?.w.concat([0,0]),t[4]=+(t[5]*2+t[4]).toFixed(8),t[5]=+(Math.log(t[5]*3+1)/3).toFixed(8),t[6]=+(t[6]+.5).toFixed(8),console.debug(\"[FSRS V5]auto fill w to 19 length\"))),{request_retention:r?.request_retention||F,maximum_interval:r?.maximum_interval||A,w:t,enable_fuzz:r?.enable_fuzz??G,enable_short_term:r?.enable_short_term??k}};function v(r,t){const e={due:r?h.time(r):new Date,stability:0,difficulty:0,elapsed_days:0,scheduled_days:0,reps:0,lapses:0,state:u.New,last_review:void 0};return t&&typeof t==\"function\"?t(e):e}Date.prototype.scheduler=function(r,t){return I(this,r,t)},Date.prototype.diff=function(r,t){return N(this,r,t)},Date.prototype.format=function(){return C(this)},Date.prototype.dueFormat=function(r,t,e){return z(this,r,t,e)};function I(r,t,e){return new Date(e?y(r).getTime()+t*24*60*60*1e3:y(r).getTime()+t*60*1e3)}function N(r,t,e){if(!r||!t)throw new Error(\"Invalid date\");const i=y(r).getTime()-y(t).getTime();let a=0;switch(e){case\"days\":a=Math.floor(i/(24*60*60*1e3));break;case\"minutes\":a=Math.floor(i/(60*1e3));break}return a}function C(r){const t=y(r),e=t.getFullYear(),i=t.getMonth()+1,a=t.getDate(),s=t.getHours(),n=t.getMinutes(),l=t.getSeconds();return`${e}-${w(i)}-${w(a)} ${w(s)}:${w(n)}:${w(l)}`}function w(r){return r<10?`0${r}`:`${r}`}const S=[60,60,24,31,12],E=[\"second\",\"min\",\"hour\",\"day\",\"month\",\"year\"];function z(r,t,e,i=E){r=y(r),t=y(t),i.length!==E.length&&(i=E);let a=r.getTime()-t.getTime(),s;for(a/=1e3,s=0;s<S.length&&!(a<S[s]);s++)a/=S[s];return`${Math.floor(a)}${e?i[s]:\"\"}`}function y(r){return h.time(r)}function B(r){return h.state(r)}function W(r){return h.rating(r)}const T=[d.Again,d.Hard,d.Good,d.Easy],J=[{start:2.5,end:7,factor:.15},{start:7,end:20,factor:.1},{start:20,end:1/0,factor:.05}];function U(r,t,e){let i=1;for(const n of J)i+=n.factor*Math.max(Math.min(r,n.end)-n.start,0);r=Math.min(r,e);let a=Math.max(2,Math.round(r-i));const s=Math.min(Math.round(r+i),e);return r>t&&(a=Math.max(a,t+1)),a=Math.min(a,s),{min_ivl:a,max_ivl:s}}function p(r,t,e){return Math.min(Math.max(r,t),e)}function q(r,t){const e=Date.UTC(r.getUTCFullYear(),r.getUTCMonth(),r.getUTCDate()),i=Date.UTC(t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate());return Math.floor((i-e)/864e5)}class K{c;s0;s1;s2;constructor(t){const e=Q();this.c=1,this.s0=e(\" \"),this.s1=e(\" \"),this.s2=e(\" \"),t==null&&(t=+new Date),this.s0-=e(t),this.s0<0&&(this.s0+=1),this.s1-=e(t),this.s1<0&&(this.s1+=1),this.s2-=e(t),this.s2<0&&(this.s2+=1)}next(){const t=2091639*this.s0+this.c*23283064365386963e-26;return this.s0=this.s1,this.s1=this.s2,this.s2=t-(this.c=t|0),this.s2}set state(t){this.c=t.c,this.s0=t.s0,this.s1=t.s1,this.s2=t.s2}get state(){return{c:this.c,s0:this.s0,s1:this.s1,s2:this.s2}}}function Q(){let r=4022871197;return function(t){t=String(t);for(let e=0;e<t.length;e++){r+=t.charCodeAt(e);let i=.02519603282416938*r;r=i>>>0,i-=r,i*=r,r=i>>>0,i-=r,r+=i*4294967296}return(r>>>0)*23283064365386963e-26}}function X(r){const t=new K(r),e=()=>t.next();return e.int32=()=>t.next()*4294967296|0,e.double=()=>e()+(e()*2097152|0)*11102230246251565e-32,e.state=()=>t.state,e.importState=i=>(t.state=i,e),e}const R=-.5,$=19/81;class Y{param;intervalModifier;_seed;constructor(t){this.param=new Proxy(M(t),this.params_handler_proxy()),this.intervalModifier=this.calculate_interval_modifier(this.param.request_retention)}get interval_modifier(){return this.intervalModifier}set seed(t){this._seed=t}calculate_interval_modifier(t){if(t<=0||t>1)throw new Error(\"Requested retention rate should be in the range (0,1]\");return+((Math.pow(t,1/R)-1)/$).toFixed(8)}get parameters(){return this.param}set parameters(t){this.update_parameters(t)}params_handler_proxy(){const t=this;return{set:function(e,i,a){return i===\"request_retention\"&&Number.isFinite(a)&&(t.intervalModifier=t.calculate_interval_modifier(Number(a))),Reflect.set(e,i,a),!0}}}update_parameters(t){const e=M(t);for(const i in e)if(i in this.param){const a=i;this.param[a]=e[a]}}init_stability(t){return Math.max(this.param.w[t-1],.1)}init_difficulty(t){return this.constrain_difficulty(this.param.w[4]-Math.exp((t-1)*this.param.w[5])+1)}apply_fuzz(t,e){if(!this.param.enable_fuzz||t<2.5)return Math.round(t);const i=X(this._seed)(),{min_ivl:a,max_ivl:s}=U(t,e,this.param.maximum_interval);return Math.floor(i*(s-a+1)+a)}next_interval(t,e){const i=Math.min(Math.max(1,Math.round(t*this.intervalModifier)),this.param.maximum_interval);return this.apply_fuzz(i,e)}linear_damping(t,e){return+(t*(10-e)/9).toFixed(8)}next_difficulty(t,e){const i=-this.param.w[6]*(e-3),a=t+this.linear_damping(i,t);return this.constrain_difficulty(this.mean_reversion(this.init_difficulty(d.Easy),a))}constrain_difficulty(t){return Math.min(Math.max(+t.toFixed(8),1),10)}mean_reversion(t,e){return+(this.param.w[7]*t+(1-this.param.w[7])*e).toFixed(8)}next_recall_stability(t,e,i,a){const s=d.Hard===a?this.param.w[15]:1,n=d.Easy===a?this.param.w[16]:1;return+p(e*(1+Math.exp(this.param.w[8])*(11-t)*Math.pow(e,-this.param.w[9])*(Math.exp((1-i)*this.param.w[10])-1)*s*n),.01,36500).toFixed(8)}next_forget_stability(t,e,i){return+p(this.param.w[11]*Math.pow(t,-this.param.w[12])*(Math.pow(e+1,this.param.w[13])-1)*Math.exp((1-i)*this.param.w[14]),.01,36500).toFixed(8)}next_short_term_stability(t,e){return+p(t*Math.exp(this.param.w[17]*(e-3+this.param.w[18])),.01,36500).toFixed(8)}forgetting_curve(t,e){return+Math.pow(1+$*t/e,R).toFixed(8)}next_state(t,e,i){const{difficulty:a,stability:s}=t??{difficulty:0,stability:0};if(e<0)throw new Error(`Invalid delta_t \"${e}\"`);if(i<0||i>4)throw new Error(`Invalid grade \"${i}\"`);if(a===0&&s===0)return{difficulty:this.init_difficulty(i),stability:this.init_stability(i)};if(i===0)return{difficulty:a,stability:s};if(a<1||s<.01)throw new Error(`Invalid memory state { difficulty: ${a}, stability: ${s} }`);const n=this.forgetting_curve(e,s),l=this.next_recall_stability(a,s,n,i),o=this.next_forget_stability(a,s,n),c=this.next_short_term_stability(s,i);let f=l;if(i===1){let[_,g]=[0,0];this.param.enable_short_term&&(_=this.param.w[17],g=this.param.w[18]);const m=s/Math.exp(_*g);f=p(m,.01,o)}return e===0&&this.param.enable_short_term&&(f=c),{difficulty:this.next_difficulty(a,i),stability:f}}}function D(){const r=this.review_time.getTime(),t=this.current.reps,e=this.current.difficulty*this.current.stability;return`${r}_${t}_${e}`}function Z(r){return function(){const t=Reflect.get(this.current,r)??0,e=this.current.reps;return String(t+e||0)}}var x=(r=>(r.SCHEDULER=\"Scheduler\",r.SEED=\"Seed\",r))(x||{});class H{last;current;review_time;next=new Map;algorithm;initSeedStrategy;constructor(t,e,i,a={seed:D}){this.algorithm=i,this.initSeedStrategy=a.seed.bind(this),this.last=h.card(t),this.current=h.card(t),this.review_time=h.time(e),this.init()}init(){const{state:t,last_review:e}=this.current;let i=0;t!==u.New&&e&&(i=q(e,this.review_time)),this.current.last_review=this.review_time,this.current.elapsed_days=i,this.current.reps+=1,this.algorithm.seed=this.initSeedStrategy()}preview(){return{[d.Again]:this.review(d.Again),[d.Hard]:this.review(d.Hard),[d.Good]:this.review(d.Good),[d.Easy]:this.review(d.Easy),[Symbol.iterator]:this.previewIterator.bind(this)}}*previewIterator(){for(const t of T)yield this.review(t)}review(t){const{state:e}=this.last;let i;switch(e){case u.New:i=this.newState(t);break;case u.Learning:case u.Relearning:i=this.learningState(t);break;case u.Review:i=this.reviewState(t);break}if(i)return i;throw new Error(\"Invalid grade\")}buildLog(t){const{last_review:e,due:i,elapsed_days:a}=this.last;return{rating:t,state:this.current.state,due:e||i,stability:this.current.stability,difficulty:this.current.difficulty,elapsed_days:this.current.elapsed_days,last_elapsed_days:a,scheduled_days:this.current.scheduled_days,review:this.review_time}}}class O extends H{newState(t){const e=this.next.get(t);if(e)return e;const i=h.card(this.current);switch(i.difficulty=this.algorithm.init_difficulty(t),i.stability=this.algorithm.init_stability(t),t){case d.Again:i.scheduled_days=0,i.due=this.review_time.scheduler(1),i.state=u.Learning;break;case d.Hard:i.scheduled_days=0,i.due=this.review_time.scheduler(5),i.state=u.Learning;break;case d.Good:i.scheduled_days=0,i.due=this.review_time.scheduler(10),i.state=u.Learning;break;case d.Easy:{const s=this.algorithm.next_interval(i.stability,this.current.elapsed_days);i.scheduled_days=s,i.due=this.review_time.scheduler(s,!0),i.state=u.Review;break}default:throw new Error(\"Invalid grade\")}const a={card:i,log:this.buildLog(t)};return this.next.set(t,a),a}learningState(t){const e=this.next.get(t);if(e)return e;const{state:i,difficulty:a,stability:s}=this.last,n=h.card(this.current),l=this.current.elapsed_days;switch(n.difficulty=this.algorithm.next_difficulty(a,t),n.stability=this.algorithm.next_short_term_stability(s,t),t){case d.Again:{n.scheduled_days=0,n.due=this.review_time.scheduler(5,!1),n.state=i;break}case d.Hard:{n.scheduled_days=0,n.due=this.review_time.scheduler(10),n.state=i;break}case d.Good:{const c=this.algorithm.next_interval(n.stability,l);n.scheduled_days=c,n.due=this.review_time.scheduler(c,!0),n.state=u.Review;break}case d.Easy:{const c=this.algorithm.next_short_term_stability(s,d.Good),f=this.algorithm.next_interval(c,l),_=Math.max(this.algorithm.next_interval(n.stability,l),f+1);n.scheduled_days=_,n.due=this.review_time.scheduler(_,!0),n.state=u.Review;break}default:throw new Error(\"Invalid grade\")}const o={card:n,log:this.buildLog(t)};return this.next.set(t,o),o}reviewState(t){const e=this.next.get(t);if(e)return e;const i=this.current.elapsed_days,{difficulty:a,stability:s}=this.last,n=this.algorithm.forgetting_curve(i,s),l=h.card(this.current),o=h.card(this.current),c=h.card(this.current),f=h.card(this.current);this.next_ds(l,o,c,f,a,s,n),this.next_interval(l,o,c,f,i),this.next_state(l,o,c,f),l.lapses+=1;const _={card:l,log:this.buildLog(d.Again)},g={card:o,log:super.buildLog(d.Hard)},m={card:c,log:super.buildLog(d.Good)},b={card:f,log:super.buildLog(d.Easy)};return this.next.set(d.Again,_),this.next.set(d.Hard,g),this.next.set(d.Good,m),this.next.set(d.Easy,b),this.next.get(t)}next_ds(t,e,i,a,s,n,l){t.difficulty=this.algorithm.next_difficulty(s,d.Again);const o=n/Math.exp(this.algorithm.parameters.w[17]*this.algorithm.parameters.w[18]);t.stability=Math.min(+o.toFixed(8),this.algorithm.next_forget_stability(s,n,l)),e.difficulty=this.algorithm.next_difficulty(s,d.Hard),e.stability=this.algorithm.next_recall_stability(s,n,l,d.Hard),i.difficulty=this.algorithm.next_difficulty(s,d.Good),i.stability=this.algorithm.next_recall_stability(s,n,l,d.Good),a.difficulty=this.algorithm.next_difficulty(s,d.Easy),a.stability=this.algorithm.next_recall_stability(s,n,l,d.Easy)}next_interval(t,e,i,a,s){let n,l;n=this.algorithm.next_interval(e.stability,s),l=this.algorithm.next_interval(i.stability,s),n=Math.min(n,l),l=Math.max(l,n+1);const o=Math.max(this.algorithm.next_interval(a.stability,s),l+1);t.scheduled_days=0,t.due=this.review_time.scheduler(5),e.scheduled_days=n,e.due=this.review_time.scheduler(n,!0),i.scheduled_days=l,i.due=this.review_time.scheduler(l,!0),a.scheduled_days=o,a.due=this.review_time.scheduler(o,!0)}next_state(t,e,i,a){t.state=u.Relearning,e.state=u.Review,i.state=u.Review,a.state=u.Review}}class P extends H{newState(t){const e=this.next.get(t);if(e)return e;this.current.scheduled_days=0,this.current.elapsed_days=0;const i=h.card(this.current),a=h.card(this.current),s=h.card(this.current),n=h.card(this.current);this.init_ds(i,a,s,n);const l=0;return this.next_interval(i,a,s,n,l),this.next_state(i,a,s,n),this.update_next(i,a,s,n),this.next.get(t)}init_ds(t,e,i,a){t.difficulty=this.algorithm.init_difficulty(d.Again),t.stability=this.algorithm.init_stability(d.Again),e.difficulty=this.algorithm.init_difficulty(d.Hard),e.stability=this.algorithm.init_stability(d.Hard),i.difficulty=this.algorithm.init_difficulty(d.Good),i.stability=this.algorithm.init_stability(d.Good),a.difficulty=this.algorithm.init_difficulty(d.Easy),a.stability=this.algorithm.init_stability(d.Easy)}learningState(t){return this.reviewState(t)}reviewState(t){const e=this.next.get(t);if(e)return e;const i=this.current.elapsed_days,{difficulty:a,stability:s}=this.last,n=this.algorithm.forgetting_curve(i,s),l=h.card(this.current),o=h.card(this.current),c=h.card(this.current),f=h.card(this.current);return this.next_ds(l,o,c,f,a,s,n),this.next_interval(l,o,c,f,i),this.next_state(l,o,c,f),l.lapses+=1,this.update_next(l,o,c,f),this.next.get(t)}next_ds(t,e,i,a,s,n,l){t.difficulty=this.algorithm.next_difficulty(s,d.Again),t.stability=Math.min(n,this.algorithm.next_forget_stability(s,n,l)),e.difficulty=this.algorithm.next_difficulty(s,d.Hard),e.stability=this.algorithm.next_recall_stability(s,n,l,d.Hard),i.difficulty=this.algorithm.next_difficulty(s,d.Good),i.stability=this.algorithm.next_recall_stability(s,n,l,d.Good),a.difficulty=this.algorithm.next_difficulty(s,d.Easy),a.stability=this.algorithm.next_recall_stability(s,n,l,d.Easy)}next_interval(t,e,i,a,s){let n,l,o,c;n=this.algorithm.next_interval(t.stability,s),l=this.algorithm.next_interval(e.stability,s),o=this.algorithm.next_interval(i.stability,s),c=this.algorithm.next_interval(a.stability,s),n=Math.min(n,l),l=Math.max(l,n+1),o=Math.max(o,l+1),c=Math.max(c,o+1),t.scheduled_days=n,t.due=this.review_time.scheduler(n,!0),e.scheduled_days=l,e.due=this.review_time.scheduler(l,!0),i.scheduled_days=o,i.due=this.review_time.scheduler(o,!0),a.scheduled_days=c,a.due=this.review_time.scheduler(c,!0)}next_state(t,e,i,a){t.state=u.Review,e.state=u.Review,i.state=u.Review,a.state=u.Review}update_next(t,e,i,a){const s={card:t,log:this.buildLog(d.Again)},n={card:e,log:super.buildLog(d.Hard)},l={card:i,log:super.buildLog(d.Good)},o={card:a,log:super.buildLog(d.Easy)};this.next.set(d.Again,s),this.next.set(d.Hard,n),this.next.set(d.Good,l),this.next.set(d.Easy,o)}}class tt{fsrs;constructor(t){this.fsrs=t}replay(t,e,i){return this.fsrs.next(t,e,i)}handleManualRating(t,e,i,a,s,n,l){if(typeof e>\"u\")throw new Error(\"reschedule: state is required for manual rating\");let o,c;if(e===u.New)o={rating:d.Manual,state:e,due:l??i,stability:t.stability,difficulty:t.difficulty,elapsed_days:a,last_elapsed_days:t.elapsed_days,scheduled_days:t.scheduled_days,review:i},c=v(i),c.last_review=i;else{if(typeof l>\"u\")throw new Error(\"reschedule: due is required for manual rating\");const f=l.diff(i,\"days\");o={rating:d.Manual,state:t.state,due:t.last_review||t.due,stability:t.stability,difficulty:t.difficulty,elapsed_days:a,last_elapsed_days:t.elapsed_days,scheduled_days:t.scheduled_days,review:i},c={...t,state:e,due:l,last_review:i,stability:s||t.stability,difficulty:n||t.difficulty,elapsed_days:a,scheduled_days:f,reps:t.reps+1}}return{card:c,log:o}}reschedule(t,e){const i=[];let a=v(t.due);for(const s of e){let n;if(s.review=h.time(s.review),s.rating===d.Manual){let l=0;a.state!==u.New&&a.last_review&&(l=s.review.diff(a.last_review,\"days\")),n=this.handleManualRating(a,s.state,s.review,l,s.stability,s.difficulty,s.due?h.time(s.due):void 0)}else n=this.replay(a,s.review,s.rating);i.push(n),a=n.card}return i}calculateManualRecord(t,e,i,a){if(!i)return null;const{card:s,log:n}=i,l=h.card(t);return l.due.getTime()===s.due.getTime()?null:(l.scheduled_days=s.due.diff(l.due,\"days\"),this.handleManualRating(l,s.state,h.time(e),n.elapsed_days,a?s.stability:void 0,a?s.difficulty:void 0,s.due))}}class V extends Y{strategyHandler=new Map;Scheduler;constructor(t){super(t);const{enable_short_term:e}=this.parameters;this.Scheduler=e?O:P}params_handler_proxy(){const t=this;return{set:function(e,i,a){return i===\"request_retention\"&&Number.isFinite(a)?t.intervalModifier=t.calculate_interval_modifier(Number(a)):i===\"enable_short_term\"&&(t.Scheduler=a===!0?O:P),Reflect.set(e,i,a),!0}}}useStrategy(t,e){return this.strategyHandler.set(t,e),this}clearStrategy(t){return t?this.strategyHandler.delete(t):this.strategyHandler.clear(),this}getScheduler(t,e){const i=this.strategyHandler.get(x.SEED),a=this.strategyHandler.get(x.SCHEDULER)||this.Scheduler,s=i||D;return new a(t,e,this,{seed:s})}repeat(t,e,i){const a=this.getScheduler(t,e).preview();return i&&typeof i==\"function\"?i(a):a}next(t,e,i,a){const s=this.getScheduler(t,e),n=h.rating(i);if(n===d.Manual)throw new Error(\"Cannot review a manual rating\");const l=s.review(n);return a&&typeof a==\"function\"?a(l):l}get_retrievability(t,e,i=!0){const a=h.card(t);e=e?h.time(e):new Date;const s=a.state!==u.New?Math.max(e.diff(a.last_review,\"days\"),0):0,n=a.state!==u.New?this.forgetting_curve(s,+a.stability.toFixed(8)):0;return i?`${(n*100).toFixed(2)}%`:n}rollback(t,e,i){const a=h.card(t),s=h.review_log(e);if(s.rating===d.Manual)throw new Error(\"Cannot rollback a manual rating\");let n,l,o;switch(s.state){case u.New:n=s.due,l=void 0,o=0;break;case u.Learning:case u.Relearning:case u.Review:n=s.review,l=s.due,o=a.lapses-(s.rating===d.Again&&s.state===u.Review?1:0);break}const c={...a,due:n,stability:s.stability,difficulty:s.difficulty,elapsed_days:s.last_elapsed_days,scheduled_days:s.scheduled_days,reps:Math.max(0,a.reps-1),lapses:Math.max(0,o),state:s.state,last_review:l};return i&&typeof i==\"function\"?i(c):c}forget(t,e,i=!1,a){const s=h.card(t);e=h.time(e);const n=s.state===u.New?0:e.diff(s.last_review,\"days\"),l={rating:d.Manual,state:s.state,due:s.due,stability:s.stability,difficulty:s.difficulty,elapsed_days:0,last_elapsed_days:s.elapsed_days,scheduled_days:n,review:e},o={card:{...s,due:e,stability:0,difficulty:0,elapsed_days:0,scheduled_days:0,reps:i?0:s.reps,lapses:i?0:s.lapses,state:u.New,last_review:s.last_review},log:l};return a&&typeof a==\"function\"?a(o):o}reschedule(t,e=[],i={}){const{recordLogHandler:a,reviewsOrderBy:s,skipManual:n=!0,now:l=new Date,update_memory_state:o=!1}=i;s&&typeof s==\"function\"&&e.sort(s),n&&(e=e.filter(b=>b.rating!==d.Manual));const c=new tt(this),f=c.reschedule(i.first_card||v(),e),_=f.length,g=h.card(t),m=c.calculateManualRecord(g,l,_?f[_-1]:void 0,o);return a&&typeof a==\"function\"?{collections:f.map(a),reschedule_item:m?a(m):null}:{collections:f,reschedule_item:m}}}const et=r=>new V(r||{});export{H as AbstractScheduler,R as DECAY,D as DefaultInitSeedStrategy,$ as FACTOR,V as FSRS,Y as FSRSAlgorithm,j as FSRSVersion,Z as GenSeedStrategyWithCardId,T as Grades,d as Rating,u as State,x as StrategyMode,h as TypeConvert,p as clamp,v as createEmptyCard,q as dateDiffInDays,N as date_diff,I as date_scheduler,G as default_enable_fuzz,k as default_enable_short_term,A as default_maximum_interval,F as default_request_retention,L as default_w,y as fixDate,W as fixRating,B as fixState,C as formatDate,et as fsrs,M as generatorParameters,U as get_fuzz_range,z as show_diff_message};\n//# sourceMappingURL=index.mjs.map\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/popup/script/leetcodecn.js\");\n",""],"names":[],"sourceRoot":""}